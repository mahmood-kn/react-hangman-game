{"version":3,"sources":["components/Caption.js","context/hangmanContext.js","components/Hang.js","components/Wrong.js","components/Word.js","components/GameOver.js","components/Message.js","App.js","context/types.js","context/hangmanReducer.js","context/HangmanState.js","index.js"],"names":["Caption","className","hangmanContext","createContext","Hang","hangIndex","useContext","HangmanContext","useState","class1","setClass1","class2","setClass2","class3","setClass3","class4","setClass4","class5","setClass5","class6","setClass6","useEffect","height","width","x1","y1","x2","y2","cx","cy","r","Wrong","wrongLetters","length","map","letter","i","Word","selectedWord","correctLetter","split","includes","GameOver","parts","Set","onClick","window","location","reload","Message","message","join","App","displayWord","handleKeyDown","getWords","loading","getData","a","localStorage","clear","addEventListener","removeEventListener","DISPLAY_WORD","CORRECT_LETTER","WRONG_LETTERS","SET_LOADING","SHOW_MESSAGE","HIDE_MESSAGE","HANG","hangmanReducer","state","action","type","payload","push","splice","HangmanState","children","useReducer","HangmanReducer","dispatch","fetch","res","json","word","getItem","newWord","JSON","parse","setItem","stringify","showMessage","setTimeout","hideMessage","Provider","value","e","key","keyCode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c932230.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Caption = () => {\r\n  return (\r\n    <>\r\n      <h1 className='header'>Hangman</h1>\r\n      <p className='header-p'>Find the hidden word - Enter a letter</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Caption;\r\n","import { createContext } from 'react';\r\n\r\nconst hangmanContext = createContext();\r\n\r\nexport default hangmanContext;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport HangmanContext from '../context/hangmanContext';\r\nconst Hang = () => {\r\n  const { hangIndex } = useContext(HangmanContext);\r\n  const [class1, setClass1] = useState(false);\r\n  const [class2, setClass2] = useState(false);\r\n  const [class3, setClass3] = useState(false);\r\n  const [class4, setClass4] = useState(false);\r\n  const [class5, setClass5] = useState(false);\r\n  const [class6, setClass6] = useState(false);\r\n  useEffect(() => {\r\n    switch (hangIndex) {\r\n      case 1:\r\n        setClass1(true);\r\n        break;\r\n      case 2:\r\n        setClass2(true);\r\n        break;\r\n      case 3:\r\n        setClass3(true);\r\n        break;\r\n      case 4:\r\n        setClass4(true);\r\n        break;\r\n      case 5:\r\n        setClass5(true);\r\n        break;\r\n      case 6:\r\n        setClass6(true);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }, [hangIndex]);\r\n\r\n  return (\r\n    <svg height='250' width='200' className='figure-container'>\r\n      <line x1='60' y1='20' x2='140' y2='20'></line>\r\n      <line x1='140' y1='20' x2='140' y2='50'></line>\r\n      <line x1='60' y1='20' x2='60' y2='230'></line>\r\n      <line x1='20' y1='230' x2='100' y2='230'></line>\r\n\r\n      {/* man  */}\r\n      {/* head  */}\r\n      <circle\r\n        cx='140'\r\n        cy='70'\r\n        r='20'\r\n        className={class1 ? 'figure-part show-part' : 'figure-part'}></circle>\r\n      {/* body  */}\r\n      <line\r\n        className={class2 ? 'figure-part show-part' : 'figure-part'}\r\n        x1='140'\r\n        y1='90'\r\n        x2='140'\r\n        y2='150'></line>\r\n      {/* left hand  */}\r\n      <line\r\n        className={class3 ? 'figure-part show-part' : 'figure-part'}\r\n        x1='140'\r\n        y1='120'\r\n        x2='110'\r\n        y2='100'></line>\r\n      {/* right hand  */}\r\n      <line\r\n        className={class4 ? 'figure-part show-part' : 'figure-part'}\r\n        x1='140'\r\n        y1='120'\r\n        x2='170'\r\n        y2='100'></line>\r\n      {/* left foot  */}\r\n      <line\r\n        className={class5 ? 'figure-part show-part' : 'figure-part'}\r\n        x1='140'\r\n        y1='150'\r\n        x2='110'\r\n        y2='180'></line>\r\n      {/* right foot  */}\r\n      <line\r\n        className={class6 ? 'figure-part show-part' : 'figure-part'}\r\n        x1='140'\r\n        y1='150'\r\n        x2='170'\r\n        y2='180'></line>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Hang;\r\n","import React, { useContext } from 'react';\r\nimport HangmanContext from '../context/hangmanContext';\r\n\r\nconst Wrong = () => {\r\n  const { wrongLetters } = useContext(HangmanContext);\r\n  return (\r\n    <div className='wrong-container'>\r\n      {wrongLetters.length > 0 ? <p>Wrong Letters</p> : ''}\r\n      {wrongLetters.length > 0\r\n        ? wrongLetters.map((letter, i) => (\r\n            <span className='wrong-letter' key={i}>\r\n              {`${letter},`}\r\n            </span>\r\n          ))\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wrong;\r\n","import React, { useContext } from 'react';\r\nimport HangmanContext from '../context/hangmanContext';\r\n\r\nconst Word = () => {\r\n  const { selectedWord, correctLetter } = useContext(HangmanContext);\r\n  return (\r\n    <div className='word'>\r\n      {selectedWord.split('').map((letter, i) => (\r\n        <span className='letter' key={i}>\r\n          {correctLetter.includes(letter) ? letter : ''}\r\n        </span>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","import React, { useContext } from 'react';\r\nimport HangmanContext from '../context/hangmanContext';\r\n\r\nconst GameOver = () => {\r\n  const { correctLetter, selectedWord, wrongLetters, parts } = useContext(\r\n    HangmanContext\r\n  );\r\n  return (\r\n    <div className='gameover-container'>\r\n      <div className='gameover'>\r\n        <h2 className='gameover-msg'>\r\n          {correctLetter.length ===\r\n            [...new Set(selectedWord.split(''))].length &&\r\n            'Game Over , You win 😃'}\r\n          {wrongLetters.length >= parts && 'Game Over , You lose 😕'}\r\n        </h2>\r\n        <button\r\n          className='gameover-btn'\r\n          onClick={() => window.location.reload(false)}>\r\n          Play Again\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;\r\n","import React, { useContext } from 'react';\r\nimport HangmanContext from '../context/hangmanContext';\r\n\r\nconst Message = () => {\r\n  const { message } = useContext(HangmanContext);\r\n\r\n  return (\r\n    <div className={message.join(' ')}>\r\n      <p>You have used this letter before</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useContext } from 'react';\nimport Caption from './components/Caption';\nimport Hang from './components/Hang';\nimport Wrong from './components/Wrong';\nimport Word from './components/Word';\nimport GameOver from './components/GameOver';\nimport Message from './components/Message';\nimport HangmanContext from './context/hangmanContext';\n\nfunction App() {\n  const {\n    displayWord,\n    handleKeyDown,\n    getWords,\n    correctLetter,\n    selectedWord,\n    loading,\n    message,\n    wrongLetters,\n    parts,\n  } = useContext(HangmanContext);\n  useEffect(() => {\n    localStorage.clear();\n    async function getData() {\n      await getWords();\n      displayWord();\n    }\n    getData();\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      getData();\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <div>\n      <Caption />\n      <div className='game-container'>\n        <Hang />\n        <Wrong />\n        <Word />\n      </div>\n      {(correctLetter.length === [...new Set(selectedWord.split(''))].length ||\n        wrongLetters.length >= parts) &&\n      loading === false ? (\n        <GameOver />\n      ) : null}\n      {message && <Message />}\n    </div>\n  );\n}\n\nexport default App;\n","export const DISPLAY_WORD = 'DISPLAY_WORD';\r\nexport const CORRECT_LETTER = 'CORRECT_LETTER';\r\nexport const WRONG_LETTERS = 'WRONG_LETTERS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SHOW_MESSAGE = 'SHOW_MESSAGE';\r\nexport const HIDE_MESSAGE = 'HIDE_MESSAGE';\r\nexport const HANG = 'HANG';\r\n","import {\r\n  DISPLAY_WORD,\r\n  SET_LOADING,\r\n  SHOW_MESSAGE,\r\n  HIDE_MESSAGE,\r\n  CORRECT_LETTER,\r\n  WRONG_LETTERS,\r\n  HANG,\r\n} from './types';\r\n\r\nconst hangmanReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case DISPLAY_WORD:\r\n      return {\r\n        ...state,\r\n        selectedWord: action.payload,\r\n      };\r\n    case CORRECT_LETTER:\r\n      state.correctLetter.push(action.payload);\r\n      return {\r\n        ...state,\r\n        correctLetter: [...new Set(state.correctLetter)],\r\n      };\r\n    case WRONG_LETTERS:\r\n      state.wrongLetters.push(action.payload);\r\n      return {\r\n        ...state,\r\n        wrongLetters: [...new Set(state.wrongLetters)],\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case SHOW_MESSAGE:\r\n      state.message.push('show');\r\n      return {\r\n        ...state,\r\n        message: state.message,\r\n      };\r\n    case HIDE_MESSAGE:\r\n      state.message.splice(state.message.length - 1, 1);\r\n      return {\r\n        ...state,\r\n        message: state.message,\r\n      };\r\n    case HANG:\r\n      return {\r\n        ...state,\r\n        hangIndex: state.hangIndex + 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default hangmanReducer;\r\n","import React, { useReducer } from 'react';\r\nimport HangmanContext from './hangmanContext';\r\nimport HangmanReducer from './hangmanReducer';\r\nimport {\r\n  DISPLAY_WORD,\r\n  SET_LOADING,\r\n  SHOW_MESSAGE,\r\n  HIDE_MESSAGE,\r\n  CORRECT_LETTER,\r\n  WRONG_LETTERS,\r\n  HANG,\r\n} from './types';\r\n\r\nconst HangmanState = ({ children }) => {\r\n  const initialState = {\r\n    selectedWord: '',\r\n    correctLetter: [],\r\n    wrongLetters: [],\r\n    loading: true,\r\n    message: ['message-container'],\r\n    parts: 6,\r\n    hangIndex: 0,\r\n  };\r\n  const [state, dispatch] = useReducer(HangmanReducer, initialState);\r\n\r\n  const getWords = async () => {\r\n    const res = await fetch(\r\n      'https://random-word-api.herokuapp.com/word?number=1'\r\n    );\r\n    const word = await res.json();\r\n    let newWord;\r\n    if (localStorage.getItem('newWord') === null) {\r\n      newWord = [];\r\n      newWord.push(word[0]);\r\n    } else {\r\n      newWord = JSON.parse(localStorage.getItem('newWord'));\r\n      newWord.push(word[0]);\r\n    }\r\n    localStorage.setItem('newWord', JSON.stringify(newWord));\r\n    dispatch({ type: SET_LOADING });\r\n  };\r\n\r\n  const displayWord = async () => {\r\n    const word = JSON.parse(localStorage.getItem('newWord'));\r\n    const selectedWord = word ? word[0] : '';\r\n    dispatch({ type: DISPLAY_WORD, payload: selectedWord });\r\n  };\r\n\r\n  const checkLetter = (key) => {\r\n    const word = JSON.parse(localStorage.getItem('newWord'));\r\n\r\n    if (word[0].split('').includes(key)) {\r\n      if (!state.correctLetter.includes(key)) {\r\n        dispatch({ type: CORRECT_LETTER, payload: key });\r\n      } else {\r\n        showMessage();\r\n      }\r\n    } else {\r\n      if (!state.wrongLetters.includes(key)) {\r\n        dispatch({ type: WRONG_LETTERS, payload: key });\r\n\r\n        dispatch({ type: HANG });\r\n      } else {\r\n        showMessage();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n      checkLetter(e.key);\r\n    }\r\n  };\r\n  const showMessage = () => {\r\n    dispatch({ type: SHOW_MESSAGE });\r\n    setTimeout(() => {\r\n      hideMessage();\r\n    }, 2000);\r\n  };\r\n  const hideMessage = () => {\r\n    dispatch({ type: HIDE_MESSAGE });\r\n  };\r\n\r\n  return (\r\n    <HangmanContext.Provider\r\n      value={{\r\n        selectedWord: state.selectedWord,\r\n        correctLetter: state.correctLetter,\r\n        wrongLetters: state.wrongLetters,\r\n        loading: state.loading,\r\n        message: state.message,\r\n        parts: state.parts,\r\n        hangIndex: state.hangIndex,\r\n        getWords,\r\n        displayWord,\r\n        handleKeyDown,\r\n        hideMessage,\r\n      }}>\r\n      {children}\r\n    </HangmanContext.Provider>\r\n  );\r\n};\r\n\r\nexport default HangmanState;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport HangmanState from './context/HangmanState';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HangmanState>\n      <App />\n    </HangmanState>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}